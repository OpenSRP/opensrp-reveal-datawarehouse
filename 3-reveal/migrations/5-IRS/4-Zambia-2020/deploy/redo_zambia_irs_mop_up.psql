-- Deploy reveal_irs_zambia_2020:redo_zambia_irs_mop_up to pg
-- requires: zambia_focus_area_irs_base

BEGIN;

SET search_path TO :"schema",public;

-- Add zambia_focus_area_irs in pending.
DROP MATERIALIZED VIEW IF EXISTS pending_:schema .zambia_focus_area_irs CASCADE;

CREATE OR REPLACE VIEW pending_:schema .zambia_focus_area_irs
AS
SELECT * FROM zambia_focus_area_irs_base
WHERE
-- get spray areas only
is_leaf_node = TRUE;


-- Add zambia_irs_jurisdictions in pending.
DROP MATERIALIZED VIEW IF EXISTS pending_:schema .zambia_irs_jurisdictions CASCADE;

CREATE MATERIALIZED VIEW pending_:schema .zambia_irs_jurisdictions
AS
SELECT * FROM
(
    SELECT DISTINCT ON (jurisdictions_query.jurisdiction_id, plans.identifier)
        public.uuid_generate_v5(
            '6ba7b810-9dad-11d1-80b4-00c04fd430c8',
            concat(jurisdictions_query.jurisdiction_id, plans.identifier)) AS id,
        plans.identifier as plan_id,
        jurisdictions_query.jurisdiction_id AS jurisdiction_id,
        COALESCE(jurisdictions_query.jurisdiction_parent_id, '') AS jurisdiction_parent_id,
        jurisdictions_query.jurisdiction_name AS jurisdiction_name,
        jurisdictions_query.jurisdiction_depth AS jurisdiction_depth,
        jurisdictions_query.jurisdiction_path AS jurisdiction_path,
        jurisdictions_query.jurisdiction_name_path AS jurisdiction_name_path,
        jurisdictions_query.is_virtual_jurisdiction AS is_virtual_jurisdiction,
        jurisdictions_query.is_leaf_node AS is_leaf_node,
        jurisdictions_query.totStruct AS totStruct,
        jurisdictions_query.rooms_eligible AS rooms_eligible,
        jurisdictions_query.rooms_sprayed AS rooms_sprayed,
        jurisdictions_query.sprayed_rooms_eligible AS sprayed_rooms_eligible,
        jurisdictions_query.sprayed_rooms_sprayed AS sprayed_rooms_sprayed,
        jurisdictions_query.foundStruct AS foundStruct,
        jurisdictions_query.notSprayed AS notSprayed,
        jurisdictions_query.notEligible AS notEligible,
        jurisdictions_query.sprayedStruct AS sprayedStruct,
        CASE WHEN jurisdictions_query.is_virtual_jurisdiction THEN 0 ELSE jurisdictions_query.totAreas END AS totAreas,
        CASE WHEN jurisdictions_query.is_virtual_jurisdiction THEN 0 ELSE jurisdictions_query.targAreas END AS targAreas,
        CASE WHEN jurisdictions_query.is_virtual_jurisdiction THEN 0 ELSE jurisdictions_query.visitedAreas END AS visitedAreas,
        jurisdictions_query.targStruct AS targStruct,
        jurisdictions_query.perctVisAreasEffect AS perctVisAreasEffect,
        jurisdictions_query.sprayCovTarg AS sprayCovTarg,
        jurisdictions_query.foundCoverage AS foundCoverage,
        jurisdictions_query.spraySuccess AS spraySuccess,
        jurisdictions_query.roomCov AS roomCov,
        jurisdictions_query.avg_spray_effectiveness AS avg_spray_effectiveness,
        jurisdictions_query.structures_remaining_to_90_se AS structures_remaining_to_90_se,
        jurisdictions_query.tla_days_to_90_se AS tla_days_to_90_se,
        jurisdictions_query.num_health_centers_below_90_se AS num_health_centers_below_90_se,
        jurisdictions_query.num_spray_areas_below_90_se AS num_spray_areas_below_90_se,
        jurisdictions_query.latest_spray_event_id AS latest_spray_event_id,
        jurisdictions_query.latest_spray_event_date AS latest_spray_event_date,
        jurisdictions_query.latest_sa_event_id AS latest_sa_event_id,
        jurisdictions_query.latest_sa_event_date AS latest_sa_event_date
    FROM plans
    LEFT JOIN LATERAL
    (
        SELECT
            zambia_jurisdictions.jurisdiction_id AS jurisdiction_id,
            COALESCE(zambia_jurisdictions.jurisdiction_parent_id, '') AS jurisdiction_parent_id,
            zambia_jurisdictions.jurisdiction_name AS jurisdiction_name,
            zambia_jurisdictions.jurisdiction_geometry AS jurisdiction_geometry,
            zambia_jurisdictions.jurisdiction_depth AS jurisdiction_depth,
            zambia_jurisdictions.jurisdiction_path AS jurisdiction_path,
            zambia_jurisdictions.jurisdiction_name_path AS jurisdiction_name_path,
            zambia_jurisdictions.is_virtual_jurisdiction AS is_virtual_jurisdiction,
            zambia_jurisdictions.is_leaf_node AS is_leaf_node,
            zambia_focus_area_irs_query.totStruct AS totStruct,
            zambia_focus_area_irs_query.rooms_eligible AS rooms_eligible,
            zambia_focus_area_irs_query.rooms_sprayed AS rooms_sprayed,
            zambia_focus_area_irs_query.sprayed_rooms_eligible AS sprayed_rooms_eligible,
            zambia_focus_area_irs_query.sprayed_rooms_sprayed AS sprayed_rooms_sprayed,
            zambia_focus_area_irs_query.foundStruct AS foundStruct,
            zambia_focus_area_irs_query.notSprayed AS notSprayed,
            zambia_focus_area_irs_query.notEligible AS notEligible,
            zambia_focus_area_irs_query.sprayedStruct AS sprayedStruct,
            zambia_focus_area_irs_query.totAreas AS totAreas,
            zambia_focus_area_irs_query.targAreas AS targAreas,
            zambia_focus_area_irs_query.targStruct AS targStruct,
            zambia_focus_area_irs_query.visitedAreas AS visitedAreas,
            CASE
                WHEN zambia_focus_area_irs_query.sprayCovAboveMin = 0 THEN 0
                ELSE CAST(zambia_focus_area_irs_query.sprayCovHigh AS DECIMAL)/CAST(zambia_focus_area_irs_query.sprayCovAboveMin AS DECIMAL)
            END AS perctVisAreasEffect,
            CASE
                WHEN zambia_focus_area_irs_query.totStruct = 0 THEN 0
                ELSE CAST(zambia_focus_area_irs_query.sprayedStruct AS DECIMAL)/CAST(zambia_focus_area_irs_query.totStruct AS DECIMAL)
            END AS sprayCovTarg,
            CASE
                WHEN zambia_focus_area_irs_query.totStruct = 0 THEN 0
                ELSE CAST(zambia_focus_area_irs_query.foundStruct AS DECIMAL)/CAST(zambia_focus_area_irs_query.totStruct AS DECIMAL)
            END AS foundCoverage,
            CASE
                WHEN zambia_focus_area_irs_query.foundStruct = 0 THEN 0
                ELSE CAST(zambia_focus_area_irs_query.sprayedStruct AS DECIMAL)/CAST(zambia_focus_area_irs_query.foundStruct AS DECIMAL)
            END AS spraySuccess,
            CASE
                WHEN zambia_focus_area_irs_query.sprayed_rooms_eligible = 0 THEN 0
                ELSE CAST(zambia_focus_area_irs_query.sprayed_rooms_sprayed AS DECIMAL)/CAST(zambia_focus_area_irs_query.sprayed_rooms_eligible AS DECIMAL)
            END AS roomCov,
            zambia_focus_area_irs_query.avg_spray_effectiveness AS avg_spray_effectiveness,
            zambia_focus_area_irs_query.structures_remaining_to_90_se AS structures_remaining_to_90_se,
            zambia_focus_area_irs_query.tla_days_to_90_se AS tla_days_to_90_se,
            zambia_focus_area_irs_query.num_health_centers_below_90_se AS num_health_centers_below_90_se,
            zambia_focus_area_irs_query.num_spray_areas_below_90_se AS num_spray_areas_below_90_se,
            zambia_focus_area_irs_query.latest_spray_event_id AS latest_spray_event_id,
            zambia_focus_area_irs_query.latest_spray_event_date AS latest_spray_event_date,
            zambia_focus_area_irs_query.latest_sa_event_id AS latest_sa_event_id,
            zambia_focus_area_irs_query.latest_sa_event_date AS latest_sa_event_date
        FROM pending_:schema .zambia_jurisdictions
        LEFT JOIN LATERAL (
            SELECT
                COALESCE(COUNT(jurisdiction_id), 0) AS totAreas,
                -- TODO targAreas
                COALESCE(COUNT(jurisdiction_id), 0) AS targAreas,
                COALESCE(SUM(targStruct), 0) AS targStruct,
                COALESCE(COUNT(jurisdiction_id) FILTER (WHERE foundStruct > 0), 0) AS visitedAreas,
                COALESCE(COUNT(jurisdiction_id) FILTER (WHERE sprayCov > 0.85), 0) AS sprayCovHigh,
                COALESCE(COUNT(jurisdiction_id) FILTER (WHERE sprayCov > 0.20 AND sprayCov < 0.85), 0) AS sprayCovLow,
                COALESCE(COUNT(jurisdiction_id) FILTER (WHERE sprayCov > 0.20), 0) AS sprayCovAboveMin,
                COALESCE(SUM(totStruct), 0) AS totStruct,
                COALESCE(SUM(rooms_eligible), 0) AS rooms_eligible,
                COALESCE(SUM(rooms_sprayed), 0) AS rooms_sprayed,
                COALESCE(SUM(sprayed_rooms_eligible), 0) AS sprayed_rooms_eligible,
                COALESCE(SUM(sprayed_rooms_sprayed), 0) AS sprayed_rooms_sprayed,
                COALESCE(SUM(foundStruct), 0) AS foundStruct,
                COALESCE(SUM(notSprayed), 0) AS notSprayed,
                COALESCE(SUM(notEligible), 0) AS notEligible,
                COALESCE(SUM(sprayedStruct), 0) AS sprayedStruct,
                COUNT(
                    DISTINCT
                    CASE
                    	WHEN NOT is_virtual_jurisdiction AND COALESCE(structures_remaining_to_90_se, 0) > 0 THEN health_center_jurisdiction_id
                    	ELSE NULL
                    END
			    ) AS num_health_centers_below_90_se,
			    SUM(
                    CASE
                    	WHEN NOT is_virtual_jurisdiction AND COALESCE(structures_remaining_to_90_se, 0) > 0 THEN 1
                    	ELSE 0
                    END
			    ) AS num_spray_areas_below_90_se,
			    AVG(spray_effectiveness) AS avg_spray_effectiveness,
				SUM(COALESCE(structures_remaining_to_90_se, 0)) AS structures_remaining_to_90_se,
				SUM(COALESCE(tla_days_to_90_se, 0)) AS tla_days_to_90_se,
			    (MAX(ARRAY[TO_JSON(latest_spray_event_date)#>>'{}', latest_spray_event_id]) FILTER (WHERE latest_spray_event_id is not null))[2] AS latest_spray_event_id,
			    MAX(latest_spray_event_date) AS latest_spray_event_date,
				(MAX(ARRAY[TO_JSON(latest_sa_event_date)#>>'{}', latest_sa_event_id]) FILTER (WHERE latest_sa_event_id is not null))[2] AS latest_sa_event_id,
			    MAX(latest_sa_event_date) AS latest_sa_event_date
            FROM zambia_focus_area_irs_base AS zambia_focus_area_irs
            WHERE zambia_focus_area_irs.plan_id = plans.identifier
                AND ( (zambia_jurisdictions.is_virtual_jurisdiction
                       AND zambia_focus_area_irs.is_virtual_jurisdiction
                       AND zambia_focus_area_irs.jurisdiction_path @> ARRAY[zambia_jurisdictions.jurisdiction_parent_id])
                     OR ((NOT zambia_jurisdictions.is_virtual_jurisdiction)
                         AND (NOT zambia_focus_area_irs.is_virtual_jurisdiction)
                         AND zambia_focus_area_irs.jurisdiction_path @> ARRAY[zambia_jurisdictions.jurisdiction_id]) )
        ) AS zambia_focus_area_irs_query ON true
        WHERE
        -- dont get any spray areas
        zambia_jurisdictions.is_leaf_node = FALSE
        -- get only jurisdictions with spray areas
        AND zambia_focus_area_irs_query.totAreas > 0
    ) AS jurisdictions_query ON true
    WHERE plans.intervention_type IN ('IRS', 'Dynamic-IRS') AND plans.status NOT IN ('draft', 'retired')
) AS main_query
ORDER BY CASE WHEN main_query.is_virtual_jurisdiction THEN 1 ELSE 0 END ASC, main_query.jurisdiction_name;

CREATE INDEX IF NOT EXISTS zambia_irs_jurisdictions_path_idx_gin on pending_:schema .zambia_irs_jurisdictions using GIN(jurisdiction_path);
CREATE INDEX IF NOT EXISTS zambia_irs_jurisdictions_plan_idx ON pending_:schema .zambia_irs_jurisdictions (plan_id);
CREATE INDEX IF NOT EXISTS zambia_irs_jurisdictions_jurisdiction_idx ON pending_:schema .zambia_irs_jurisdictions (jurisdiction_id);
CREATE INDEX IF NOT EXISTS zambia_irs_jurisdictions_jurisdiction_parent_idx ON pending_:schema .zambia_irs_jurisdictions (jurisdiction_parent_id);
CREATE UNIQUE INDEX IF NOT EXISTS zambia_irs_jurisdictions_idx ON pending_:schema .zambia_irs_jurisdictions (id);


ALTER MATERIALIZED VIEW zambia_focus_area_irs SET SCHEMA deprecated_:schema ;
ALTER MATERIALIZED VIEW zambia_irs_jurisdictions SET SCHEMA deprecated_:schema ;

ALTER MATERIALIZED VIEW pending_:schema .zambia_focus_area_irs SET SCHEMA :"schema";
ALTER MATERIALIZED VIEW pending_:schema .zambia_irs_jurisdictions SET SCHEMA :"schema";

COMMIT;

-- Deploy reveal_irs_zambia_2020:remove_hard_coded_jurisdiction_depth to pg
-- requires: reveal_database_views:jurisdictions_tree

BEGIN;

SET search_path TO :"schema",public;

-- Add zambia_jurisdictions in pending.
DROP MATERIALIZED VIEW IF EXISTS pending_:schema .zambia_jurisdictions CASCADE;

CREATE MATERIALIZED VIEW IF NOT EXISTS pending_:schema .zambia_jurisdictions AS
SELECT *,
    jurisdiction_id AS opensrp_jurisdiction_id,
    CASE
        WHEN is_leaf_node != TRUE THEN MD5(CONCAT(jurisdiction_id, '_remainder'))
        ELSE jurisdiction_id
    END AS zambia_jurisdiction_id,
    FALSE AS is_virtual_jurisdiction
FROM jurisdictions_tree
UNION ALL
SELECT
    MD5(CONCAT(jurisdiction_id, '_remainder')) AS jurisdiction_id,
    jurisdiction_id AS jurisdiction_parent_id,
    jurisdiction_name || ' (other)' AS jurisdiction_name,
    jurisdiction_geometry AS jurisdiction_geometry,
    jurisdiction_depth + 1 AS jurisdiction_depth,
    ARRAY_APPEND(jurisdiction_path, jurisdiction_id) AS jurisdiction_path,
    ARRAY_APPEND(jurisdiction_name_path, jurisdiction_name) AS jurisdiction_name_path,
    is_leaf_node,
    jurisdiction_root_parent_id,
    jurisdiction_root_parent_name,
    jurisdiction_id AS opensrp_jurisdiction_id,
    MD5(CONCAT(jurisdiction_id, '_remainder')) AS zambia_jurisdiction_id,
    TRUE AS is_virtual_jurisdiction
FROM jurisdictions_tree
WHERE is_leaf_node != TRUE;

CREATE UNIQUE INDEX IF NOT EXISTS zambia_jurisdictions_id_idx ON pending_:schema .zambia_jurisdictions (jurisdiction_id);
CREATE INDEX IF NOT EXISTS zambia_jurisdictions_opensrp_jurisdiction_id_idx ON pending_:schema .zambia_jurisdictions (opensrp_jurisdiction_id);
CREATE INDEX IF NOT EXISTS zambia_jurisdictions_parent_id_idx ON pending_:schema .zambia_jurisdictions (jurisdiction_parent_id);
CREATE INDEX IF NOT EXISTS zambia_jurisdictions_jurisdiction_depth_idx ON pending_:schema .zambia_jurisdictions (jurisdiction_depth);
CREATE INDEX IF NOT EXISTS zambia_jurisdictions_jurisdiction_root_parent_id_idx ON pending_:schema .zambia_jurisdictions (jurisdiction_root_parent_id);
CREATE INDEX IF NOT EXISTS zambia_jurisdictions_jurisdiction_geometry_gix ON pending_:schema .zambia_jurisdictions USING GIST (jurisdiction_geometry);

-- Add zambia_structure_jurisdictions in pending.
DROP MATERIALIZED VIEW IF EXISTS pending_:schema .zambia_structure_jurisdictions CASCADE;

CREATE MATERIALIZED VIEW IF NOT EXISTS pending_:schema .zambia_structure_jurisdictions AS
SELECT structure_geo_hierarchy.*,
       COALESCE(zambia_virtual_jurisdictions.jurisdiction_id, structure_geo_hierarchy.geo_jurisdiction_id, structure_geo_hierarchy.jurisdiction_id) AS zambia_jurisdiction_id,
       COALESCE(zambia_virtual_jurisdictions.jurisdiction_depth, structure_geo_hierarchy.geo_jurisdiction_depth, structure_geo_hierarchy.jurisdiction_depth) AS zambia_jurisdiction_depth
FROM structure_geo_hierarchy
LEFT JOIN
    (SELECT *
     FROM pending_:schema .zambia_jurisdictions AS zambia_jurisdictions
     WHERE is_virtual_jurisdiction = TRUE) AS zambia_virtual_jurisdictions
     ON zambia_virtual_jurisdictions.opensrp_jurisdiction_id = structure_geo_hierarchy.geo_jurisdiction_id;


CREATE UNIQUE INDEX IF NOT EXISTS zambia_structure_jurisdictions_id_idx ON pending_:schema .zambia_structure_jurisdictions (id);
CREATE INDEX IF NOT EXISTS zambia_structure_jurisdictions_jurisdiction_id_idx ON pending_:schema .zambia_structure_jurisdictions (jurisdiction_id);
CREATE INDEX IF NOT EXISTS zambia_structure_jurisdictions_geo_jurisdiction_id_idx ON pending_:schema .zambia_structure_jurisdictions (geo_jurisdiction_id);
CREATE INDEX IF NOT EXISTS zambia_structure_jurisdictions_zambia_jurisdiction_id_idx ON pending_:schema .zambia_structure_jurisdictions (zambia_jurisdiction_id);


COMMIT;
